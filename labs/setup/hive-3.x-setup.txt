#Pre-requisites:
#java 1.8
#hadoop 3.x.x

#Download Hive
cd ~/Downloads
curl https://downloads.apache.org/hive/hive-3.1.2/apache-hive-3.1.2-bin.tar.gz -o hive-3.1.2.tar.gz
tar xzvf hive-3.1.2.tar.gz

sudo mv apache-hive-3.1.2-bin /opt/hive

#HIVE_HOME configuration
sudo nano ~/.bashrc
#############################
export HIVE_HOME=/opt/hive 
export PATH=$PATH:$HIVE_HOME/bin
##############################################
source ~/.bashrc			=> reloads the changes

#Verify Hive Installation
hive --version				=> should show hive version details

#Configure embedded metastore (derby db) path
cd $HIVE_HOME/conf
sudo vi hive-site.xml
#########################################
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration>
    <property>
        <name>javax.jdo.option.ConnectionURL</name>
        <value>jdbc:derby:/opt/hive/metastore_db;databaseName=metastore_db;create=true</value>
        <description>
            JDBC connect string for a JDBC metastore.
            To use SSL to encrypt/authenticate the connection, provide database-specific SSL flag in the connection URL.
            For example, jdbc:postgresql://myhost/db?ssl=true for postgres database.
        </description>
    </property>
</configuration>
#########################################

###Start Hive Client
hive						=> starts hive client and creates metastore_db under $HIVE_HOME
hive> show tables;			=> shows error - HiveException java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient

########################################################
###KNOWN ISSUE FOR HADOOP 3.2.1 WITH HIVE 3.1.2#########
REFERENCE: https://issues.apache.org/jira/browse/HIVE-22915
ERROR: java.lang.NoSuchMethodError: com.google.common.base.Preconditions.checkArgument(ZLjava/lang/String;Ljava/lang/Object
CAUSE:  guava lib version is different in Hive lib folder and Hadoop shared folder 
FIX: 
$ rm /opt/hive/lib/guava-19.0.jar
$ cp /opt/hadoop/share/hadoop/hdfs/lib/guava-27.0-jre.jar /opt/hive/lib/
########################################################

#Initialize Metastore Schema
rm -rf $HIVE_HOME/metastore_db
cd $HIVE_HOME
schematool -initSchema -dbType derby

#Create HDFS directories for Hive and change permissions
$HADOOP_HOME/bin/hadoop fs -mkdir /tmp 
$HADOOP_HOME/bin/hadoop fs -mkdir /user/hive
$HADOOP_HOME/bin/hadoop fs -mkdir /user/hive/warehouse
$HADOOP_HOME/bin/hadoop fs -chmod g+w /tmp 
$HADOOP_HOME/bin/hadoop fs -chmod g+w /user/hive/warehouse

###Start Hive Client
hive						=> starts hive client
hive> show tables;			=> shows list of tables

hive> set hive.cli.print.header=true;	=> Displays output with headers
hive> hive.formatted.describe.extended	=> Formats describe extended command output

##Start HiveServer2 (Optional)
cd $HIVE_HOME
bin/hiveserver2 &			=> run in the background

###Connect to Hive Beeline client (Local Mode)
beeline
!connect jdbc:hive2:// username password org.apache.hive.jdbc.HiveDriver	=> driver name is optional
show tables;

###Connect to Hive Beeline client (Server Mode)
beeline
!connect jdbc:hive2://localhost:10000 username password org.apache.hive.jdbc.HiveDriver	=> driver name is optional
show tables;

############CONFIGURING EXTERNAL METASTORE###################

#HIVE METASTORE SETUP - START
#DOWNLOAD DERBY DB
cd ~/Downloads
wget http://archive.apache.org/dist/db/derby/db-derby-10.4.2.0/db-derby-10.4.2.0-bin.tar.gz
tar zxvf db-derby-10.4.2.0-bin.tar.gz

sudo su
cd ~/Downloads
mv db-derby-10.4.2.0-bin /usr/derby
exit

sudo mkdir /usr/derby
sudo tar xzvf db-derby-10.4.2.0-bin.tar.gz -C /usr/derby
cd /usr/hive

### TO BE UPDATED


###Configuring MySQL as external database for Hive Metastore
##NOTE: Mysql service should be installed, configured and started before this step
sudo apt-get install libmysql-java
ln -s /usr/share/java/mysql-connector-java.jar /usr/hive/lib/mysql-connector-java.jar

mysql -u root -p
(password: root)

CREATE DATABASE metastore;
USE metastore;

SOURCE /usr/hive/scripts/metastore/upgrade/mysql/hive-schema-1.1.0.mysql.sql;

CREATE USER 'hive'@'localhost' IDENTIFIED BY 'hive';
REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'hive'@'localhost';
GRANT ALL PRIVILEGES ON metastore.* TO 'hive'@'localhost';
FLUSH PRIVILEGES;
quit;

#Configure Hive to connect to MySQL metastore db
sudo vi /usr/hive/conf/hive-site.xml
#########################################
<property>
  <name>javax.jdo.option.ConnectionURL</name>
  <value>jdbc:mysql://localhost/metastore</value>
  <description>the URL of the MySQL database</description>
</property>

<property>
  <name>javax.jdo.option.ConnectionDriverName</name>
  <value>com.mysql.jdbc.Driver</value>
</property>

<property>
  <name>javax.jdo.option.ConnectionUserName</name>
  <value>hive</value>
</property>

<property>
  <name>javax.jdo.option.ConnectionPassword</name>
  <value>hive</value>
</property>

<property>
  <name>datanucleus.autoCreateSchema</name>
  <value>false</value>
</property>

<property>
  <name>datanucleus.fixedDatastore</name>
  <value>true</value>
</property>

<property>
  <name>datanucleus.autoStartMechanism</name> 
  <value>SchemaTable</value>
</property> 

<property>
  <name>hive.metastore.uris</name>
  <value>thrift://localhost:9083</value>
  <description>IP address (or fully-qualified domain name) and port of the metastore host</description>
</property>

<property>
<name>hive.metastore.schema.verification</name>
<value>true</value>
</property>
###############################################